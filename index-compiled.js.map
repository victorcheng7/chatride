{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["//This is still work in progress\r\n/*\r\nPlease report any bugs to nicomwaks@gmail.com\r\n\r\ni have added console.log on line 48 \r\n\r\n\r\n\r\n\r\n */\r\n'use strict'\r\n\r\nconst express = require('express')\r\nconst bodyParser = require('body-parser')\r\nconst request = require('request')\r\nconst app = express()\r\n\r\napp.set('port', (process.env.PORT || 5000))\r\n\r\n// parse application/x-www-form-urlencoded\r\napp.use(bodyParser.urlencoded({extended: false}))\r\n\r\n// parse application/json\r\napp.use(bodyParser.json())\r\n\r\n// index\r\napp.get('/', function (req, res) {\r\n\tres.send('hello world i am a secret bot')\r\n})\r\n\r\n// for facebook verification\r\napp.get('/webhook/', function (req, res) {\r\n\tif (req.query['hub.verify_token'] === process.env.RIDE_TOKEN) {\r\n\t\tres.send(req.query['hub.challenge'])\r\n\t} else {\r\n\t\tres.send('Error, wrong token')\r\n\t}\r\n})\r\n\r\n// to post data\r\napp.post('/webhook/', function (req, res) {\r\n\tlet messaging_events = req.body.entry[0].messaging\r\n\tfor (let i = 0; i < messaging_events.length; i++) {\r\n\t\tlet event = req.body.entry[0].messaging[i]\r\n\t\tlet sender = event.sender.id\r\n\t\tif (event.message && event.message.text) {\r\n\t\t\tlet text = event.message.text\r\n\t\t\tif (text === 'Generic'){ \r\n\t\t\t\tconsole.log(\"welcome to chatbot\")\r\n\t\t\t\t//sendGenericMessage(sender)\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tsendTextMessage(sender, \"Text received, echo: \" + text.substring(0, 200))\r\n\t\t}\r\n\t\tif (event.postback) {\r\n\t\t\tlet text = JSON.stringify(event.postback)\r\n\t\t\tsendTextMessage(sender, \"Postback received: \"+text.substring(0, 200), token)\r\n\t\t\tcontinue\r\n\t\t}\r\n\t}\r\n\tres.sendStatus(200)\r\n})\r\n\r\n\r\n// recommended to inject access tokens as environmental variables, e.g.\r\n// const token = process.env.FB_PAGE_ACCESS_TOKEN\r\nconst token = \"EAAXZAo9NZASdkBACdvyasvABk5odZAqFVN4NTol0J6glBev4arjEKK9vKKh4z75TPScZBxKI56LrrMVo6ZBZC7P3Hd9toHUWY4boLZCkv4xVwgHflcR6CQUDE9tjZCo6NMlsKRimGtnNmTukpMc317Dxc8HV0vgO3ki4OP1y7cgHxgZDZD\"\r\n//const token = \"<FB_PAGE_ACCESS_TOKEN>\"\r\n\r\nfunction sendTextMessage(sender, text) {\r\n\tlet messageData = { text:text }\r\n\t\r\n\trequest({\r\n\t\turl: 'https://graph.facebook.com/v2.6/me/messages',\r\n\t\tqs: {access_token:token},\r\n\t\tmethod: 'POST',\r\n\t\tjson: {\r\n\t\t\trecipient: {id:sender},\r\n\t\t\tmessage: messageData,\r\n\t\t}\r\n\t}, function(error, response, body) {\r\n\t\tif (error) {\r\n\t\t\tconsole.log('Error sending messages: ', error)\r\n\t\t} else if (response.body.error) {\r\n\t\t\tconsole.log('Error: ', response.body.error)\r\n\t\t}\r\n\t})\r\n}\r\n\r\nfunction sendGenericMessage(sender) {\r\n\tlet messageData = {\r\n\t\t\"attachment\": {\r\n\t\t\t\"type\": \"template\",\r\n\t\t\t\"payload\": {\r\n\t\t\t\t\"template_type\": \"generic\",\r\n\t\t\t\t\"elements\": [{\r\n\t\t\t\t\t\"title\": \"First card\",\r\n\t\t\t\t\t\"subtitle\": \"Element #1 of an hscroll\",\r\n\t\t\t\t\t\"image_url\": \"http://messengerdemo.parseapp.com/img/rift.png\",\r\n\t\t\t\t\t\"buttons\": [{\r\n\t\t\t\t\t\t\"type\": \"web_url\",\r\n\t\t\t\t\t\t\"url\": \"https://www.messenger.com\",\r\n\t\t\t\t\t\t\"title\": \"web url\"\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"type\": \"postback\",\r\n\t\t\t\t\t\t\"title\": \"Postback\",\r\n\t\t\t\t\t\t\"payload\": \"Payload for first element in a generic bubble\",\r\n\t\t\t\t\t}],\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"title\": \"Second card\",\r\n\t\t\t\t\t\"subtitle\": \"Element #2 of an hscroll\",\r\n\t\t\t\t\t\"image_url\": \"http://messengerdemo.parseapp.com/img/gearvr.png\",\r\n\t\t\t\t\t\"buttons\": [{\r\n\t\t\t\t\t\t\"type\": \"postback\",\r\n\t\t\t\t\t\t\"title\": \"Postback\",\r\n\t\t\t\t\t\t\"payload\": \"Payload for second element in a generic bubble\",\r\n\t\t\t\t\t}],\r\n\t\t\t\t}]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\trequest({\r\n\t\turl: 'https://graph.facebook.com/v2.6/me/messages',\r\n\t\tqs: {access_token:token},\r\n\t\tmethod: 'POST',\r\n\t\tjson: {\r\n\t\t\trecipient: {id:sender},\r\n\t\t\tmessage: messageData,\r\n\t\t}\r\n\t}, function(error, response, body) {\r\n\t\tif (error) {\r\n\t\t\tconsole.log('Error sending messages: ', error)\r\n\t\t} else if (response.body.error) {\r\n\t\t\tconsole.log('Error: ', response.body.error)\r\n\t\t}\r\n\t})\r\n}\r\n\r\n// spin spin sugar\r\napp.listen(app.get('port'), function() {\r\n\tconsole.log('running on port', app.get('port'))\r\n})\r\n"]}